pipeline {
    agent any

    tools {
        maven "maven363"
    }
    environment {
    	WORKDIR = "./spring-boot-samples/spring-boot-sample-web-ui"
        NEXUS_VERSION = 'nexus3'
        NEXUS_PROTOCOL = 'http'
        NEXUS_URL = "localhost:8081"
        NEXUS_REPOSITORY = "GrW"
        NEXUS_CREDENTIAL_ID = "6f6c7b81-b8ac-4229-a669-fd7701a03500"
    }
	stages {
		stage('SCM checkout') {
			steps{
				git branch: '2.1.x', url: 'https://github.com/miehhej/spring-boot.git'
			}		}
    	stage('Port Number input') {
    		steps {
    			script {
    				def Port = input(
    					id:				'portnumber',
    					message: 		'Enter Port Number JAVA_APP will listen on, 1000-65535',
    					parameters : [string(	
    						name:'number',
    						defaultValue: 	'8082'
    					)]
    				)    			}    		}    	}
    	stage("Build") {
        	steps {
				sh "mvn -DskipTests clean install -f ./spring-boot-samples/spring-boot-sample-web-ui/pom.xml"
			}
		}
		stage ('Upload to NEXUS') {
			steps {
				echo "Current workspace is ${env.WORKSPACE}"
				sh "ls -la ${pwd()}/spring-boot-samples/spring-boot-sample-web-ui/target" 
				script {
					nexusArtifactUploader artifacts: [
						[
						artifactId: 'spring-boot-sample-web-ui', 
						classifier: '', 
						file: "./spring-boot-samples/spring-boot-sample-web-ui/spring-boot-sample-web-ui-2.1.16.BUILD-SNAPSHOT.jar",
						type: 'jar'
						]
					], 
						credentialsId: NEXUS_CREDENTIAL_ID,
						groupId: 'gr.id', 
						nexusUrl: NEXUS_URL, 
						nexusVersion: '$NEXUS_VERSION', 
						protocol: '$NEXUS_PROTOCOL', 
						repository: '$NEXUS_REPOSITORY', 
						version: '$BUILD_NUMBER'
				}            }        }
        stage ('Deploy to dev') {
        	steps {
        		sh 'docker build ./ias/Dockerfile -t grw:$BUILD_NUMBER'
        	
        		sh 'docker container stop $(docker container ls –aq)'
			//	#	docker container rm $(docker container ls –aq)
        		sh 'docker run -d  -p env.PortNumber:8080 --name grw_$BUILD_NUMBER grw:$BUILD_NUMBER'
		}	} } } 



